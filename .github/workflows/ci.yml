name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Install development tools
      run: make local-setup

    - name: Run validation suite
      run: make validate

    - name: Build binary
      run: make build

    - name: Test binary version command
      run: ./build/k8s-memory-watch --version

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'

    - name: Run security scan
      run: make security-scan

  build-matrix:
    runs-on: ubuntu-latest
    needs: [validate, security]
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'

    - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
        BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        mkdir -p dist
        BINARY_NAME="k8s-memory-watch"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        
        go build \
          -ldflags "-X main.Version=${VERSION} -X main.Commit=${COMMIT} -X main.BuildTime=${BUILD_TIME}" \
          -o "dist/${BINARY_NAME}-${{ matrix.goos }}-${{ matrix.goarch }}" \
          ./cmd/k8s-memory-watch
        
        # Test the binary (skip Windows on Linux)
        if [ "${{ matrix.goos }}" = "linux" ]; then
          ./dist/${BINARY_NAME}-${{ matrix.goos }}-${{ matrix.goarch }} --version
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/
