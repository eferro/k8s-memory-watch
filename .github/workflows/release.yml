name: Release

on:
  workflow_run:
    workflows: [CI]
    types: [completed]

jobs:
  create-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version from tag
        id: version
        run: |
          REF=${{ github.ref_name }}
          echo "tag=${REF}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.tag }}
          generate_release_notes: true

  build-and-upload:
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build
        run: |
          OS=${{ matrix.os }}
          ARCH=${{ matrix.arch }}
          EXT=""
          if [ "$OS" = "windows" ]; then EXT=".exe"; fi
          mkdir -p build/dist
          GOOS=$OS GOARCH=$ARCH go build -ldflags "-s -w" -o build/dist/k8s-memory-watch-$OS-$ARCH$EXT ./cmd/k8s-memory-watch

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: k8s-memory-watch-${{ matrix.os }}-${{ matrix.arch }}
          path: build/dist/*

  create-checksums:
    needs: build-and-upload
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/dist

      - name: Generate checksums
        run: |
          cd build/dist
          shasum -a 256 * > checksums.txt

      - name: Upload checksums
        uses: softprops/action-gh-release@v2
        with:
          files: build/dist/checksums.txt
